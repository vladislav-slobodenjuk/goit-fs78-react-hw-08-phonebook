{"version":3,"file":"static/js/462.ecca47da.chunk.js","mappings":"oNAMMA,EAAQ,CACZC,QAAS,OACTC,cAAe,SACfC,aAAc,QAGVC,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCL,KAAMI,EAAAA,KACHE,IAAI,EAAG,aACPC,QACC,yHACA,0IAEDC,SAAS,YACZP,MAAOG,EAAAA,KAAaH,MAAM,iBAAiBO,SAAS,YACpDN,SAAUE,EAAAA,KAAaE,IAAI,GAAGE,SAAS,cA0DzC,UAvDqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,4BACE,wBAAI,kBACJ,SAAC,KAAD,CACEX,cAAeA,EACfY,iBAAkBR,EAClBS,SAXe,SAAC,EAAD,GAA+C,IAA5CZ,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcW,EAAgB,EAAhBA,UACjDJ,GAASK,EAAAA,EAAAA,IAAa,CAAEd,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACrCW,GACD,EAKG,UAKE,UAAC,KAAD,YACE,mBAAOlB,MAAOA,EAAd,UAAqB,YAEnB,SAAC,KAAD,CAAOoB,KAAK,OAAOf,KAAK,aAE1B,SAAC,KAAD,CACEL,MAAO,CAAEqB,MAAO,MAAOC,SAAU,QACjCC,UAAU,MACVlB,KAAK,UAGP,mBAAOL,MAAOA,EAAd,UAAqB,SAEnB,SAAC,KAAD,CAAOoB,KAAK,QAAQf,KAAK,cAE3B,SAAC,KAAD,CACEkB,UAAU,MACVvB,MAAO,CAAEqB,MAAO,MAAOC,SAAU,QACjCjB,KAAK,WAGP,mBAAOL,MAAOA,EAAd,UAAqB,YAEnB,SAAC,KAAD,CAAOoB,KAAK,WAAWf,KAAK,WAAWmB,UAAW,QAEpD,SAAC,KAAD,CACED,UAAU,MACVvB,MAAO,CAAEqB,MAAO,MAAOC,SAAU,QACjCjB,KAAK,cAGP,mBAAQe,KAAK,SAAb,SAAsB,oBAK/B,C","sources":["Pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Field, ErrorMessage, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { registerUser } from 'redux/auth/operations';\n\nconst style = {\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: '16px',\n};\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too short')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(7).required('Required'),\n});\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  //\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(registerUser({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <div>\n      <h1>RegisterPage</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={RegisterSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <label style={style}>\n            Username\n            <Field type=\"text\" name=\"name\" />\n          </label>\n          <ErrorMessage\n            style={{ color: 'red', fontSize: '14px' }}\n            component=\"div\"\n            name=\"name\"\n          />\n\n          <label style={style}>\n            Email\n            <Field type=\"email\" name=\"email\" />\n          </label>\n          <ErrorMessage\n            component=\"div\"\n            style={{ color: 'red', fontSize: '14px' }}\n            name=\"email\"\n          />\n\n          <label style={style}>\n            Password\n            <Field type=\"password\" name=\"password\" minLength={7} />\n          </label>\n          <ErrorMessage\n            component=\"div\"\n            style={{ color: 'red', fontSize: '14px' }}\n            name=\"password\"\n          />\n\n          <button type=\"submit\">Register</button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["style","display","flexDirection","marginBottom","initialValues","name","email","password","RegisterSchema","Yup","shape","min","matches","required","dispatch","useDispatch","validationSchema","onSubmit","resetForm","registerUser","type","color","fontSize","component","minLength"],"sourceRoot":""}